name: Golden Image Builder
on:
  workflow_dispatch:
  push:
    branches: ["main"] 

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      DBUSER: ${{ secrets.DBUSER }}
      DBPASSWORD: ${{ secrets.DBPASSWORD }}
      DBNAME: ${{ secrets.DBNAME }}    
      DBURL: ${{ secrets.DBURL }}
      ENV: ${{ secrets.ENV }}

    steps:
    - uses: actions/checkout@v2
    - name: Set Up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 20

    - name: Start MySQL Services
      run: sudo systemctl start mysql.service 

    - name: Install Dependencies    
      run: npm install

    - name: Run Tests
      run: npm test

    - name: Zip Webapp 
      run: zip -r webapp.zip ./

    - name: Install and Configure gcloud CLI
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        export_default_credentials: true

    - name: Setup Packer
      uses: hashicorp/setup-packer@main
      id: setup
      with:
        version: "1.10.1"

    - name: Initialize Packer
      run: packer init .

    - name: Format Packer Config
      run: packer fmt -check packer.pkr.hcl

    - name: Validate Packer Config
      run: packer validate packer.pkr.hcl

    - name: Build Image with Packer
      run: packer build packer.pkr.hcl

    - name: Get Image id
      run: |
        IMAGE_ID=$(jq -r '.builds[-1].artifact_id' packer-manifest.json | cut -d ":" -f2)
        echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV
        echo "Built GCP image ID is $IMAGE_ID"
 
    - name: Generate version number
      run: echo "VERSION=$(date +%s)" >> $GITHUB_ENV
 
    - name: New Instance Template
      run: |
        gcloud compute instance-templates create "instance-template-${{ env.VERSION }}" \
        --project="clod-assignment" \
        --image="${{ env.IMAGE_ID }}" \
        --network="vpc1" \
        --subnet="webapp" \
        --machine-type="e2-medium" \
        --network-tier="PREMIUM" \
        --region="us-east1" \
        --tags="webapp" \
        --boot-disk-type="pd-balanced" \
        --boot-disk-size=20GB \
        --instance-template-region=us-east1 \
        --boot-disk-kms-key=projects/clod-assignment/locations/us-east1/keyRings/${{secrets.KEY_KMS}}/cryptoKeys/webapp-kms-key \
        --boot-disk-device-name=webapp-template-instance \
        --maintenance-policy="MIGRATE" \
        --service-account="vm-service-account@clod-assignment.iam.gserviceaccount.com" \
        --scopes=logging-write,monitoring-write,cloud-platform,pubsub \
        --metadata-from-file startup-script=<(cat <<EOF
        sudo touch /new/app/.env
        echo "DATABASEUSERNAME=webapp-db-user" >> /new/app/.env
        echo "DATABASEURL=${{secrets.DATABASEURL}}" >> /new/app/.env
        echo "DATABASEPASSWORD=${{secrets.DATABASEPASSWORD}}" >> /new/app/.env
        echo "DATABASENAME=healthcheck" >> /new/app/.env
        echo "ENV=PRODUCTION" >> /new/app/.env
        EOF
        )
 
    - name: Start Rolling Update
      run: |
        gcloud compute instance-groups managed rolling-action start-update webapp-instance-group-manager \
        --version='template=projects/clod-assignment/regions/us-east1/instanceTemplates/instance-template-${{ env.VERSION }}' \
        --region="us-east1" \
        --project="clod-assignment" \
 
    - name: Wait for refresh to complete
      run: |
        gcloud compute instance-groups managed wait-until webapp-instance-group-manager \
        --version-target-reached \
        --region us-east1